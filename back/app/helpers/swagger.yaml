openapi: 3.0.0
info:
  title: API интернет магазина delarosa
  version: 1.0.1

servers:
  - url: http://localhost:5000/api/v1
    description: Сервер разработки
tags:
  - name: Users
    description: Действия с пользователями
    externalDocs:
      description: Документация swagger
      url: http://swagger.io
  - name: Token
    description: Действия с токенами доступа
    externalDocs:
      description: Документация swagger
      url: http://swagger.io
paths:
  /signin:
    post:
      tags:
        - Users
      summary: Авторизация пользователя
      operationId: signin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "example@mail.ru"
                password:
                  type: string
                  example: "pass123"
              required:
                - email
                - password
      responses:
        "200":
          description: Получили данные пользователя, а так же accessToken и refreshToken и устанавливаем refreshToken в cookies с параметром httpOnly
          headers:
            Set-Cookie:
              description: "`refreshToken`"
              schema:
                type: string
                example: refreshToken=51872eca5efedcf424db4cf5afd16a9d00ad25b743a034c9c221afc85d18dcd5e4ad6e3f08607550; Path=/; Expires=Tue, 16 Jun 2020 09:14:17 GMT; HttpOnly
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJ5Ym9sb3ZhbGV4QGdtYWlsLmNvbSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWQiOiI2M2ViNWFiNWFlNTEwZGM3N2VhMTRlODIiLCJpYXQiOjE2NzY0Mzc5MTIsImV4cCI6MTY3NjQzOTcxMn0.UBk17_zNMsVA5M3bSbnPJCMFn23hJ3GYTenG1l8xHK8"
                  refreshToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJ5Ym9sb3ZhbGV4QGdtYWlsLmNvbSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWQiOiI2M2ViNWFiNWFlNTEwZGM3N2VhMTRlODIiLCJpYXQiOjE2NzY0Mzc5MTIsImV4cCI6MTY3OTAyOTkxMn0.LrwLWFXcZyICmiaflu1FFo3n9tq0S5cPTs-Bt6sP6L8"
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "rybolovalex@gmail.com"
                      isActivated:
                        type: boolean
                        example: false
                      id:
                        type: string
                        example: 63eb5ab5ae510dc77ea14e82
        "401":
          description: Ошибка авторизации
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasError:
                    type: boolean
                    example: true
                  status:
                    type: number
                    example: 400
                  response:
                    example: []
                  message:
                    type: string
                    example: "Пара логин,пароль неверна"
        "404":
          description: Пользователь не найден
          content:
            application/json:
              schema:
                type: object
                properties:
                  hasError:
                    type: boolean
                    example: true
                  status:
                    type: number
                    example: 404
                  response:
                    example: [ ]
                  message:
                    type: string
                    example: "Пользователь не зарегистрирован"
  /signup:
    post:
      tags:
        - Users
      summary: Регистрация пользователя
      operationId: signup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "example@mail.ru"
                password:
                  type: string
                  example: "pass123"
              required:
                - email
                - password
      responses:
        "200":
          description: Получили данные пользователя, а так же accessToken и refreshToken и устанавливаем refreshToken в cookies с параметром httpOnly
          headers:
            Set-Cookie:
              description: "`refreshToken`"
              schema:
                type: string
                example: refreshToken=51872eca5efedcf424db4cf5afd16a9d00ad25b743a034c9c221afc85d18dcd5e4ad6e3f08607550; Path=/; Expires=Tue, 16 Jun 2020 09:14:17 GMT; HttpOnly
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJ5Ym9sb3ZhbGV4QGdtYWlsLmNvbSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWQiOiI2M2ViNWFiNWFlNTEwZGM3N2VhMTRlODIiLCJpYXQiOjE2NzY0Mzc5MTIsImV4cCI6MTY3NjQzOTcxMn0.UBk17_zNMsVA5M3bSbnPJCMFn23hJ3GYTenG1l8xHK8"
                  refreshToken:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InJ5Ym9sb3ZhbGV4QGdtYWlsLmNvbSIsImlzQWN0aXZhdGVkIjpmYWxzZSwiaWQiOiI2M2ViNWFiNWFlNTEwZGM3N2VhMTRlODIiLCJpYXQiOjE2NzY0Mzc5MTIsImV4cCI6MTY3OTAyOTkxMn0.LrwLWFXcZyICmiaflu1FFo3n9tq0S5cPTs-Bt6sP6L8"
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                        example: "rybolovalex@gmail.com"
                      isActivated:
                        type: boolean
                        example: false
                      id:
                        type: string
                        example: 63eb5ab5ae510dc77ea14e82
        "400":
          description: Ошибка регистрации
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Пара логин,пароль неверна"
  /logout:
    post:
      tags:
        - Users
      summary: Выход пользователя
      operationId: logout
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Произошло разлогинивание пользователя
          content:
            application/json:
              schema:
                type: object
  /active/{link}:
    post:
      tags:
        - Users
      summary: Активация пользователя и подтверждения емайла
      operationId: active_link
      parameters:
        - name: link
          in: path
          description: ссылка из письма
          required: true
          schema:
            type: string
            example: ""
      responses:
        "200":
          description: Пользователь активирован
          content:
            application/json:
              schema:
                type: object
  /refresh:
    post:
      tags:
        - Token
      summary: Выход пользователя
      operationId: logout_user
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
      responses:
        "200":
          description: Произошло разлогинивание пользователя
          content:
            application/json:
              schema:
                type: object

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    UnauthorizedError:
      description: Access token is missing or invalid, or the user does not have access to perform the action
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Unauthorized"
    NotFoundError:
      description: Not Found
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: "Not Found"